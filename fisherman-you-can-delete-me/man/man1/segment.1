.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "SEGMENT" "1" "March 2016" "" "segment"
.
.SH "NAME"
\fBsegment\fR \- Powerline prompt builder
.
.SH "SYNOPSIS"
\fBsegment\fR \fItext\fR \fIcolor\fR \fIbackground color\fR [\fIsuffix\fR] [\fIprefix\fR]
.
.br
\fBsegment_right\fR \fItext\fR \fIcolor\fR \fIbackground color\fR [\fIsuffix\fR] [\fIprefix\fR]
.
.br
\fBsegment_close\fR
.
.br
.
.SH "DESCRIPTION"
\fBSegment\fR is a fish library to build powerline prompts\.
.
.SH "USAGE"
Call segment or segment_right to create a powerline segment\. Call segment_close after you have built the entire prompt\.
.
.P
The left prompt is built from \fIright\fR to \fIleft\fR\.
.
.P
The right prompt is built from \fIleft\fR to \fIright\fR\.
.
.IP "" 4
.
.nf

function fish_prompt
    segment FRONT white red
    segment BASE black white
    segment_close
end

function fish_right_prompt
    segment_right FRONT white red
    segment_right BASE black white
    segment_close
end
.
.fi
.
.IP "" 0
.
.P
The following example implements a mirror left\-right prompt using prompt_pwd, to get the current working directory, shortened to fit the prompt\.
.
.IP "" 4
.
.nf

function fish_prompt
    set \-l cwd (prompt_pwd)
    set \-l dir (dirname $cwd)
    set \-l base (basename $cwd)

    segment " $base " white 00f
    segment " $dir " black white 
    segment_close
end

function fish_right_prompt
    set \-l cwd (prompt_pwd)
    set \-l dir (dirname $cwd)
    set \-l base (basename $cwd)

    segment_right " $base " white 00f
    segment_right " $dir " black white 
    segment_close
end
.
.fi
.
.IP "" 0
.
.SH "OPTIONS"
.
.TP
text
Set the text to display in the segment\.
.
.TP
color
Set the text color\.
.
.TP
background
Set the background color\.
.
.TP
suffix
Optional text to display at the end of the segment delimiter\.
.
.TP
prefix
Optional text to display at the beginning of the segment delimiter\.

